"""empty message

Revision ID: e332711275ee
Revises: 
Create Date: 2024-10-23 19:25:03.714530

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = 'e332711275ee'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table('category__to__category__doc',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.Column('child_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('category__to__category__doc', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_category__to__category__doc_child_id'), ['child_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_category__to__category__doc_parent_id'), ['parent_id'], unique=False)
    except OperationalError:
        print("Table category_to_category_doc already created")

    try:
        op.drop_table('directory')
    except OperationalError:
        print("Directory table already dropped")

    try:
        with op.batch_alter_table('category', schema=None) as batch_op:
            batch_op.add_column(sa.Column('uuid', sa.String(length=36), nullable=True))
    except OperationalError:
        print("Column uuid already in category")

    try:
        with op.batch_alter_table('category__doc', schema=None) as batch_op:
            batch_op.add_column(sa.Column('uuid', sa.String(length=36), nullable=True))
    except OperationalError:
        print("Column uuid already in category_doc")



    connection = op.get_bind()

    c_to_c = connection.execute(sa.text("Select * from 'category__to__category'"))
    for c in c_to_c:
        connection.execute(
            sa.text(f"insert into category__to__category__doc (parent_id,child_id) values ({c.parent_id}, {c.child_id})")
        )
    
    connection.execute(sa.text("delete from 'category__to__category'"))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('category__doc', schema=None) as batch_op:
        batch_op.drop_column('uuid')

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.drop_column('uuid')

    op.create_table('directory',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('parent_id', sa.INTEGER(), nullable=True),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['directory.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('category__to__category__doc', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_category__to__category__doc_parent_id'))
        batch_op.drop_index(batch_op.f('ix_category__to__category__doc_child_id'))

    op.drop_table('category__to__category__doc')
    # ### end Alembic commands ###
